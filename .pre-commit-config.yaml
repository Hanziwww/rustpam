# Pre-commit hooks configuration
# See https://pre-commit.com for more information
# Install: pre-commit install
# Update: pre-commit autoupdate

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: \.patch$
      - id: end-of-file-fixer
        exclude: \.patch$
      - id: check-yaml
        args: ['--unsafe']  # Allow custom tags in YAML
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3
        args: ['--config=pyproject.toml']

  # Python import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort (python)
        args: ['--settings-path=pyproject.toml']

  # Python linting with flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        additional_dependencies: [flake8-docstrings, flake8-bugbear]
        args: ['--config=.flake8']

  # Python type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        additional_dependencies: [numpy, types-setuptools]
        args: ['--config-file=pyproject.toml']
        exclude: ^(test/|examples/)

  # Rust formatting with rustfmt
  - repo: https://github.com/doublify/pre-commit-rust
    rev: v1.0
    hooks:
      - id: fmt
        name: rustfmt
        description: Format Rust code with rustfmt
        entry: cargo fmt
        language: system
        types: [rust]
        pass_filenames: false
        args: ['--all', '--', '--check']

      - id: clippy
        name: clippy
        description: Lint Rust code with clippy
        entry: cargo clippy
        language: system
        types: [rust]
        pass_filenames: false
        args: ['--all-targets', '--all-features', '--', '-D', 'warnings']

  # TOML formatting
  - repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
    rev: v2.14.0
    hooks:
      - id: pretty-format-toml
        args: [--autofix, --indent, '2']
        exclude: Cargo.lock

  # Markdown formatting
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.19
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-gfm
          - mdformat-black
        args: ['--wrap', '100']
        exclude: ^(LICENSE|CHANGELOG)

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml', '-r', 'rustpam']
        additional_dependencies: ['bandit[toml]']
        exclude: ^test/

# Configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [clippy, fmt]  # Skip Rust checks on pre-commit.ci (no Rust environment)
  submodules: false

