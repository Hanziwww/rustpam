name: Tests

on:
  push:
    branches: [main, master, develop]
  pull_request:
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-test-${{ hashFiles('**/Cargo.lock', '**/pyproject.toml') }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install maturin pytest pytest-cov pytest-xdist pytest-timeout numpy scikit-learn

      - name: Build extension
        run: maturin develop --release

      - name: Run tests with coverage
        run: |
          pytest test/ -v \
            --cov=rustpam \
            --cov-report=xml \
            --cov-report=term-missing \
            --cov-report=html \
            --timeout=300 \
            -n auto

      - name: Upload coverage reports
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          name: py${{ matrix.python-version }}-${{ matrix.os }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
          path: |
            htmlcov/
            coverage.xml
          retention-days: 7

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          pip install maturin pytest numpy scikit-learn

      - name: Build and install
        run: maturin develop --release

      - name: Run integration tests
        run: pytest test/ -v -m integration || echo "No integration tests found"

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          pip install maturin pytest pytest-benchmark numpy scikit-learn

      - name: Build extension
        run: maturin develop --release

      - name: Run benchmarks
        run: |
          pytest test/ -v --benchmark-only || echo "No benchmarks found"

